name: Build and install

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: read

jobs:
  ubuntu-gcc-build:
    name: Ubuntu GCC
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}/build:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ github.token }}
    steps:
      - name: Initialize a repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Build as an editable package
        env:
          TRITON_PLUGIN_DIRS: ${{ github.workspace }}
        run: |
          cd triton/python
          python3.10 -m pip install -e .
      - name: Verify installation
        run: |
          cd triton/python
          python3.10 -c 'import triton; triton.runtime.driver.set_active(triton.backends.backends["acc"].driver())'

  ubuntu-clang-build:
    name: Ubuntu Clang with ccache
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}/build:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ github.token }}
    steps:
      - name: Initialize a repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Build as an editable package
        env:
          TRITON_PLUGIN_DIRS: ${{ github.workspace }}
          TRITON_BUILD_WITH_CLANG_LLD: "true"
          TRITON_BUILD_WITH_CCACHE: "true"
        run: |
          cd triton/python
          python3.10 -m pip install -e .
      - name: Verify installation
        run: |
          cd triton/python
          python3.10 -c 'import triton; triton.runtime.driver.set_active(triton.backends.backends["acc"].driver())'
